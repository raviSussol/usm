//%attributes = {"shared":true,"executedOnServer":true,"lang":"en"} comment added and reserved by 4D.
// --[HEADERSTART]-------------------------------------
// User name (OS): Edwin Monk-Fromont (sussol)
// Date and time: 11/08/15, 11:40:00
// ----------------------------------------------------
// Description:
// Import all methods in the vc_methods folder, without
// checking whether they contain changes.
// Record the latest commit in the last_commit_sha file.
// --[HEADEREND]---------------------------------------
C_LONGINT($error_l;$index)
C_LONGINT($i_num_deleted_methods)
$i_num_deleted_methods:=0

C_BOOLEAN(<>VC_Enabled_f)

UTIL_ERR_Startup 
VC_EXPORT_Stop 


If (<>VC_Enabled_f)

C_LONGINT($progID_l;$progThreshold_l)
$progThreshold_l:=1000
$progID_l:=PROG_Create ("Import";4;$progThreshold_l)


PROG_Update ($progID_l;0)

ARRAY TEXT($doclist;0)
DOCUMENT LIST(Get 4D folder(Database folder;*)+"vc_methods";$doclist;Recursive parsing+Ignore invisible)

PROG_Update ($progID_l;1/4)

// And now import the code
C_LONGINT($progIDFiles_l)
$progIDFiles_l:=PROG_Create ("Files";Size of array($doclist);$progThreshold_l)

For ($index;1;Size of array($doclist))

// load the code from disk
C_TIME($docRef_h)
UTIL_ERR_HandlerInstall 

C_TEXT($curr_file_path)
$curr_file_path:=Get 4D folder(Database folder;*)
$curr_file_path:=Convert path system to POSIX($curr_file_path)
If (Substring($doclist{$index};1;1)=":")
$doclist{$index}:=Replace string($doclist{$index};":";"";1)
End if 
$doclist{$index}:=Replace string($doclist{$index};":";"/")
If (Substring($doclist{$index};1;1)="/")
$doclist{$index}:=Replace string($doclist{$index};"/";"";1)
End if 
If (Substring($doclist{$index};1;1)="\\")
$doclist{$index}:=Replace string($doclist{$index};"\\";"";1)
End if 
$curr_file_path:=Convert path POSIX to system($curr_file_path+"vc_methods/"+$doclist{$index})
$error_l:=UTIL_ERR_HandlerRemove 

UTIL_ERR_HandlerInstall 
$docRef_h:=Open document($curr_file_path;Read mode)
$error_l:=UTIL_ERR_HandlerRemove 

PROG_Update ($progIDFiles_l;$index/Size of array($doclist);$index)

If ($error_l=0)

C_BLOB($methodBody_b;$tempBody_b)
SET BLOB SIZE($methodBody_b;0)
SET BLOB SIZE($tempBody_b;0)
RECEIVE PACKET($docRef_h;$methodBody_b;Get document size($curr_file_path))
CLOSE DOCUMENT($docRef_h)

// remove the BOM
_o_C_INTEGER($begin_offset)
COPY BLOB($methodBody_b;$tempBody_b;$begin_offset;0;BLOB size($methodBody_b)-$begin_offset)

// convert to text
$methodBody:=Convert to text($tempBody_b;"UTF-8")
// error empty method code
$error_l:=Choose(Length($methodBody)=0;51;0)
If ($error_l=0)
// fix line endings
C_TEXT($methodBody)
$methodBody:=Replace string($methodBody;Char(Line feed);Char(Carriage return))
End if 



End if 

If ($error_l=0)
// system path to method path
C_TEXT($DOAPath_t)
$DOAPath_t:=Replace string($doclist{$index};"vc_methods/";"")
$DOAPath_t:=Replace string($DOAPath_t;".txt";"")
$DOAPath_t:=Replace string($DOAPath_t;"\\";"/")// Convert \ to / for Windows
$DOAPath_t:=Replace string($DOAPath_t;":";"/")

// load the code
UTIL_ERR_HandlerInstall 
METHOD SET CODE($DOAPath_t;$methodBody;*)
$error_l:=UTIL_ERR_HandlerRemove 
$error_l:=Choose(($error_l=-9766) | ($error_l=-9768);0;$error_l)// Ignore method open errors when doing full import

End if 
If ($error_l#0)
$index:=Size of array($doclist)+1// break of for-loop
End if 

End for 

If ($error_l=0)
// Check if any methods have been deleted
ARRAY TEXT($at_method_paths;0)
METHOD GET PATHS(Path all objects;$at_method_paths;*)
C_LONGINT($progIDDeletions_l)
$progIDDeletions_l:=PROG_Create ("Deletions";Size of array($at_method_paths);$progThreshold_l)
For ($index;1;Size of array($at_method_paths))
PROG_Update ($progIDDeletions_l;$index/Size of array($at_method_paths);$index)
$curr_file_path:=Get 4D folder(Database folder;*)
$curr_file_path:=Convert path system to POSIX($curr_file_path)
$curr_file_path:=Convert path POSIX to system($curr_file_path+"vc_methods/"+$at_method_paths{$index}+".txt")
// If the document doesn't exist, delete the method (unless it is vc_matching_commit_sha)
If (Not((Test path name($curr_file_path)=Is a document) & ($error_l=0)) & (Position("vc_matching_commit_sha";$curr_file_path)=0))
$i_num_deleted_methods:=$i_num_deleted_methods+1
$methodBody:="//%attributes = {\"lang\":\"en\"} comment added and reserved by 4D.\n\n// @delete_me"
UTIL_ERR_HandlerInstall 
METHOD SET CODE($at_method_paths{$index};$methodBody;*)
$error_l:=UTIL_ERR_HandlerRemove 
$error_l:=Choose(($error_l=-9766) | ($error_l=-9768);0;$error_l)// Ignore method open errors when doing full import
End if 
End for 

If ($i_num_deleted_methods>0)
UTIL_Alert (String($i_num_deleted_methods)+" methods deleted.\nPlease manually delete all methods containing @delete_me.")
End if 

End if 

PROG_Update ($progID_l;1)

VC_GIT_WRITE_LAST_COMMIT_SHA 


Else 
// This should be impossible, because you have to open
// a method in order to run the the macro that calls
// this method...opening a method launches the component.
$error_l:=<>ERR_VC_NotEnabled_l
End if 


If ($error_l#0)
UTIL_ERR_HandleError ($error_l;<>VC_ComponentName_t;UTIL_ERR_ErrorMethod_t;"Error while importing")
Else 
UTIL_Alert ("Full import successful.")
End if 


PROG_CloseAll 
VC_EXPORT_Start 